from .models import CompaniesCar, CompaniesCarfine, CompaniesCarpassperiod, CompaniesCarpassallowedzone, CompaniesCarpass, CarPassSystemStatus, CarFineStatus, CarHaveFinesStatus
import requests
import json
from django.utils import timezone
from datetime import datetime
import os
from django.core.mail import send_mail
import re
from decimal import *
from django.db.models import Q

def send_pass_mail(mail, subject, text, send_denis=False):
    print('SSSSSSSSSMMMMMMMMMMMSSSSSSSSSSS')
    if mail != '':
        try:
            print('SSSSSSSSSMMMMMMMMMMMSSSSSSSSSSS')
            send_mail(
                subject,
                text,
                'CRM Noreply <crm@t-pass.pro>',
                [mail],
                fail_silently=False,
            )
            print('SSSSSSSSSMMMMMMMMMMMSSSSSSSSSSS')
            send_mail(
                subject,
                text,
                'CRM Noreply <crm@t-pass.pro>',
                ['noreply@tpas.pro'],
                fail_silently=False,
            )
            if send_denis:
                send_mail(
                    subject,
                    text,
                    'CRM Noreply <crm@t-pass.pro>',
                    ['dimitri.k@tpas.pro'],
                    fail_silently=False,
                )
        except Exception as e:
            print('DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD')
            print(str(e))
            send_mail(
                subject,
                str(e),
                'CRM Noreply <crm@t-pass.pro>',
                ['noreply@tpas.pro'],
                fail_silently=False,
            )

def fine_proccess(car, fines):
    if len(fines) > 0:
        fines_id = []
        car.have_fines = CarHaveFinesStatus.YES
        car.save()
        for fine in fines:
            status = CarFineStatus.ACTIVE
            amount = Decimal(fine.get('Summa'))
            date_decis = datetime.strptime(fine.get('DateDecis'), "%Y-%m-%d %H:%M:%S")
            koap_code = str(fine.get('KoAPcode'))
            koap_text = str(fine.get('KoAPtext'))
            num_post = str(fine.get('NumPost'))
            date_post = datetime.strptime(fine.get('DatePost'), "%Y-%m-%d")
            date_ssp = None
            try:
                date_ssp = datetime.strptime(fine.get('DateSSP'), "%Y-%m-%d")
            except:
                pass
            c_fine = CompaniesCarfine.objects.filter(amount=amount, num_post=num_post, date_decis=date_decis, date_post=date_post, car=car)
            if c_fine.exists():
                c_fine = c_fine.first()
                c_fine.date_ssp = date_ssp
                c_fine.update_date = timezone.now()
                c_fine.save()
                fines_id.append(c_fine.pk)
            else:
                new_fine = CompaniesCarfine.objects.create(car=car, status=status, amount=amount, date_decis=date_decis, koap_code=koap_code, koap_text=koap_text, num_post=num_post, date_post=date_post, date_ssp=date_ssp, update_date=timezone.now())
                fines_id.append(new_fine.pk)
                text = 'Автомобиль ' + car.licence_plate + '\nОбнаружен штраф! ' + '\nДата нарушения: ' + str(new_fine.date_decis.strftime("%d.%m.%Y %H:%M")) + '\nДата постановления: ' + str(new_fine.date_post.strftime("%d.%m.%Y")) + '\nПостановления: ' + str(new_fine.num_post) + '\n\nhttp://crm.t-pass.pro/dashboard/sd/companies/all/' + str(car.company.pk) + '\n\nРезервная ссылка: ' + '\nhttp://crm.t-pass.pro/dashboard/sd/companies/all/' + str(car.company.pk)
                subject = 'Обнаружен штраф (' + car.licence_plate + ')'
                send_pass_mail(text=text, subject=subject, mail=car.company.user.contact_email)
        CompaniesCarfine.objects.filter(Q(car=car) & ~Q(pk__in=fines_id)).update(status=CarFineStatus.ARCHIVE)
    else:
        if car.have_fines != CarHaveFinesStatus.NO:
            car.have_fines = CarHaveFinesStatus.NO
            CompaniesCarfine.objects.filter(status=CarFineStatus.ACTIVE, car=car).update(status=CarFineStatus.ARCHIVE, update_date=timezone.now())
            car.save()


def get_fines(car, proxy_host, proxy_port):
    try_count = 0
    while try_count < 20:
        try:
            try_count = try_count + 1
            stsnum = car.ctc
            regexp = re.compile(r'^(?P<num>[АВЕКМНОРСТУХ]\d{3}[АВЕКМНОРСТУХ]{2}|[АВЕКМНОРСТУХ]{2}\d{3}|[АВЕКМНОРСТУХ]{2}\d{4}|\d{4}[АВЕКМНОРСТУХ]{2}|\d{3}D\d{3}|Т[АВЕКМНОРСТУХ]{2}\d{3}|[АВЕКМНОРСТУХ]\d{4}|\d{3}[АВЕКМНОРСТУХ]|К[АВЕКМНОРСТУХ]{2}\d{3}|С[АВЕКМНОРСТУХ]{2}\d{3})(?P<reg>\d{2,3})$')
            licence_plate = car.licence_plate

            match = regexp.match(licence_plate)
            if match:
                regreg = match['reg']
                regnum = licence_plate.rstrip(regreg)
                data = {
                    'regnum': str(regnum),
                    'regreg': str(regreg),
                    'stsnum': str(stsnum)
                }
                proxies = {
                    'http': proxy_host + ':' + proxy_port,
                    'https': proxy_host + ':' + proxy_port
                }
                print(proxies)
                print('POOOOOOOOOOOOOOOOOST')

                res = requests.post('https://xn--b1afk4ade.xn--90adear.xn--p1ai/proxy/check/fines', data=data)
                json = res.json()
                print(res)
                print(json)
                code = 0
                try:
                    code = int(json.get('code'))
                except:
                    pass

                if code == 200:
                    fines = json.get('data')
                    fine_proccess(car=car, fines=fines)
                else:
                    print(res)
                break
            else:
                car.have_fines = CarHaveFinesStatus.NONE
                car.save(update_fields=['have_fines'])
                break
        except Exception as e:
